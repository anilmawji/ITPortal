@page "/job-results/{ResultId:int}"
@inherits ScriptJobResultBase

<PageContainer Title="PowerShell Jobs" NestedTitle=@($"Job {Result.Id}") PreviousPage="/jobs">
    <div class="script-title">
        <p>Script: @Result.ScriptName</p>
        <div class="title-chip">
            <ChipText Color="@Result.Job.State.GetColor()" Text="@Result.Job.State.ToString()" />
        </div>
    </div>

    <PageSection Title="Output">
        @for (int i = 0; i < Result.OutputStream.Output.Count(); i++)
        {
            OutputMessage psMessage = Result.OutputStream.Output[i];

            <div class="@psMessage.Stream">
                @((MarkupString)psMessage.Data)
            </div>
        }
    </PageSection>
</PageContainer>

@code {
    protected override void OnInitialized()
    {
        // Very important to make sure ScriptJobResultBase is populated
        base.OnInitialized();

        Result.OutputStream.OnOutputChanged((object sender, List<OutputMessage> newOutput) =>
        {
            InvokeAsync(() => this.StateHasChanged());
        });
    }
}
