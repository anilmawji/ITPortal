@using ITPortal.Models
@using ITPortal.Components.Shared.Script
@using ITPortal.Lib.Automation.Script
@using ITPortal.Lib.Automation.Output

@attribute [Route(PageRoute.ScriptJobResultDetails)]
@attribute [AllowAnonymous]

@inject NavigationManager NavigationManager

@inherits ScriptJobResultBase

<style>
    /* override default mud table colors */
    .mud-tab-slider {
        background-color: #0078D4;
    }

    .mud-tab.mud-tab-active {
        color: #0078D4;
    }

    .mud-tab .mud-badge {
        background-color: #000000 !important;
    }

    .mud-tab.mud-tab-active .mud-badge {
        background-color: #0078D4 !important;
    }
</style>

<PageContainer Title="PowerShell Job Results" NestedTitle=@($"Result {Result.Id}") PreviousPage="/job-results" Description="View execution details of a job">
    <div class="script-title">
        <p>Script: @Result.ScriptName</p>
        <ScriptExecutionStateChip Result=@Result OnResultReceived=@(() => InvokeAsync(this.StateHasChanged))/>
    </div>
    <div class="section">
        <p>Job: @Result.JobName</p>
        <p>Device: @Result.DeviceName</p>
        <p>Execution Time: @Result.ExecutionTime</p>
    </div>
    @if (Job == null)
    {
        <div class="section">
            <MudText>Job could not be found</MudText>
        </div>
    }
    <div class="section">
        <MudGrid Spacing="2">
            <MudItem>
                <MudButton OnClick=@TryCancelJob Variant="Variant.Filled" Color="Color.Secondary"
                           Style="color:white" Disabled=@(Job == null || Result.ExecutionState != ScriptExecutionState.Running)>
                    <MudText>Cancel</MudText>
                </MudButton>
            </MudItem>
            <MudItem>
                <MudButton OnClick=@GoToEditJob Variant="Variant.Filled" Color="Color.Secondary" Style="color:white" Disabled=@(Job == null)>
                    <MudText>Edit Job</MudText>
                </MudButton>
            </MudItem>
        </MudGrid>
    </div>
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="All Output" BadgeData=@GetOutputLineCountText(Result.ScriptOutput.GetMessages())>
            <ScriptOutputView OutputList=@Result.ScriptOutput />
        </MudTabPanel>
        @foreach ((ScriptOutputStreamType streamType, int numLines) in Result.ScriptOutput.StreamLineCounts)
        {
            if (numLines == 0) continue;

            <MudTabPanel Text=@GetTabName(streamType) Icon=@TabIcons[streamType]>
                <ScriptOutputView OutputList=@Result.ScriptOutput StreamType=@streamType />
            </MudTabPanel>
        }
    </MudTabs>
</PageContainer>
